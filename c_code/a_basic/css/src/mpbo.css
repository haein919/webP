@charset "UTF-8";
/* mpbo.css */
/* 내용 진행하기 앞서, 기본 margin,padding요소를 지우고 시작하기 */
body,h1,h2,h3,h4,h5,h6,p,ul,hr { margin:0; padding:0; }

#wrap { padding-top:20px; width:1100px; height:auto; min-height:1200px; margin:auto; background-color:#dfdfdf; }

h1 { width:300px; height:40px; background-color:#aca; margin:auto; margin-bottom:20px; }

/* =============================================================================== */
.part { width:100%; height:700px; border:1px solid #777; }
.part > ul { list-style:none; width:100%; height:100%; }
.part > ul > li { float:left; width:100px; height:100px; border:1px solid #0af; text-align:center; line-height:100px; }

/* margin : 요소와 요소 사이의 거리(눈에 보이는 공간)
   margin:10px; 위,오른쪽,아래,왼쪽 (4방향) 모두 동일한(10xpx) 여백을 가진다.
   margin:10px 30px; 위/아래(10px), 좌/우(30px)로 값을 각각 분배하여 여백을 가진다.
   margin:10px 30px 50px; 위(10), 좌/우(30), 아래(50)로 값을 분배하여 여백을 가진다.
   margin:10px 30px 50px 100px; 시계방향으로 각각 여백을 가진다.
   margin-방향:50px; 원하는 방향을 기준으로 여백을 가진다.
   ※ 단, margin을 중첩하여 사용할 경우에는, 
   겹치는 부분이 나중에 작성한 부분으로 처리가 되므로, 주의하여 사용할 것.
*/
.margin li:nth-child(1) { margin:10px; }
.margin li:nth-child(2) { margin:10px 30px; }
.margin li:nth-child(3) { margin:10px 30px 50px; }
.margin li:nth-child(4) { margin:10px 30px 50px 100px; }
.margin li:nth-child(5) { margin:0 0 0 100px; }
.margin li:nth-child(6) { margin-top:30px; margin-left:50px; }
.margin li:nth-child(7) { margin:20px; margin-top:70px; margin-right:10px; }

/* padding ==================================================================== */
.padding > ul > li { text-align:left; line-height:20px; font-weight:bold; }
.padding > ul > li:nth-child(2n - 1) { background-color:#fa3; }
.padding > ul > li:nth-child(2n) { background-color:#3af; }

.padding_sample { padding:20px; width:300px; height:150px; background-color:#fa7; }
.insert_p { width:100%; height:100%; background-color:transparent; }

/* padding: 요소의 부피를 키워서 공간을 확보하는 형태로, 
   width/height 값의 실제는 변하지 않지만 외부에서 보이는 형태로는 
   width/height가 변한 것 처럼 처리된다. 
   padding:20px; 위,오른,아래,왼쪽으로 4방향 모두 공간을 만든다.
   padding:20px 40px; 위/아래(20), 좌/우(40)만큼의 공간을 만든다.
   padding:10px 30px 100px; 위(10), 좌/우(30), 아래(100)만큼 공간을 만든다.
   padding:10px 20px 30px 40px; 시계방향으로 각각 공간을 만든다.
   padding-방향:50px; 기입된 방향만 별도의 공간을 가진다.
   ※단, 전체의 값을 먼저 사용하고 일부분을 나중에 사용해야 필요한 형태로 제작 가능 
*/

.padding > ul > li:nth-child(1) { padding:20px; }
.padding > ul > li:nth-child(2) { padding:20px 40px; }
.padding > ul > li:nth-child(3) { padding:10px 30px 100px; }
.padding > ul > li:nth-child(4) { padding:10px 20px 30px 40px; }
.padding > ul > li:nth-child(5) { padding:10px 10px 50px 10px; }
.padding > ul > li:nth-child(6) { padding:10px; padding-bottom:50px; }
/* ============================================================================= */

.mp_sample { width:700px; height:800px; margin:auto; border:2px solid #777; }
.mp_sample p { width:70%; height:80px; background-color:#aca; border-bottom:1px solid #07f; }

.mp_sample p:nth-of-type(1) { margin:auto; margin-top:100px; margin-bottom:30px; }
.mp_sample p:nth-of-type(2) { margin-top:50px; }
/* 위 두 요소의 margin-bottom과 margin-top이 같이 쓰이면 더 큰 값만 적용된다. */
.mp_sample p:nth-of-type(4) { width:50%; margin-left:50px; margin-top:-20px; background-color:#caa; }
.mp_sample p:nth-of-type(5) { margin-left:10%; margin-top:10%; width:50%; height:100px; background-color:#fa0; }

/* ============================================================================= */
/* border: 외곽선 
   border-style -> solid:직선, dotted:점선, dashed:쇄선, ridge,double..... 
*/
.border ul li:nth-child(1) { border-width:10px; border-style:solid; border-color:#fa8; }
.border ul li:nth-child(2) { border:5px dotted #85f; }
.border ul li:nth-child(3) { background-color:#fc7; 
  border-width:15px; border-top-width:3px; border-left-width:30px; border-style:solid; border-right-style:dotted; border-bottom-style:ridge; border-color:#f08; border-left-color:#fa9; }
.border ul li:nth-child(4) { background-color:#caa; border:30px ridge #fa0; border-top:10px solid #f03; border-bottom:10px solid #fff; border-left:none; border-right:none; }
.border ul li:nth-child(5) { border:30px solid #acf; border-top-color:#fff; }
.border ul li:nth-child(6) { 
width:0; height:0; 
border:30px solid #f03;
border-top-width:0;
border-bottom-width:50px;
border-top-color:transparent; 
border-left-color:rgba(255,0,51,0); 
border-right-color:hsla(358, 100%, 50%, 0);
font-size:0.3rem;
text-indent:-22px;
line-height:70px;
color:#fff; font-weight:bold; }

.border ul li:nth-child(7) { border:5px solid #f03; 
border-left-color:transparent;
border-bottom-color:transparent;
transform:rotate(45deg) }
.border ul li:nth-child(7) > span { display:block; width:100%; height:100%; transform:rotate(-45deg); }
/* ====================================================================== */

/* 
 1. outline 속성은 margin, padding, border와는 다르게 다른 요소에 영향을 미치지 않는다. 
 2. outline속성은 일부 방향성이 없다. 
 3. 단, 기존 선의 위치에서 일부 공간을 만들어서 표기하는 형태만 존재
 4. 그 쓰임 위치는 대부분 focus를 처리하게 만드는 요소 
    (a, button, form내부의 요소)에서 주로 사용한다.
*/
.outline ul li,
.outline ul li > button
{ width:auto; min-width:100px; cursor:pointer; }
.outline li:nth-child(1) { /* outline-width:10px; outline-style:dotted; outline-color:#0af; */ outline:10px solid #ff0; 
outline-offset:5px; }

.outline li:nth-child(2) > a { display:block; width:100%; height:100%; }

/* :focus란?
   링크(a), 버튼(input or button), 입력창(input, select)등의 환경에서,
   마우스가 아닌 키보드로 위치를 찾아서 기능을 수행하고자 할때, 해당 위치에 선점한 것을 체크하는 기능
*/
.outline li:nth-child(2) > a:focus { outline:5px solid #fa0; }

.outline li:nth-child(3) > button { display:block; width:100px; height:100%; border:0; background-color:transparent; }
.outline li:nth-child(3) > button:focus { outline:10px solid #f07; }
.outline li:nth-child(4):focus { outline:20px solid #0f7;}

.box_sizing { width:80%; height:400px; margin:100px auto; }
.box_sizing div { 
  float:left;
  width:100px; height:100px; 
  margin:10px; padding:15px;
  border:30px solid #999; 
  border-right-color:#0af;
  background-color:#fa5; }

.box_sizing div:nth-of-type(1) { box-sizing:content-box; }
.box_sizing div:nth-of-type(2) { box-sizing:border-box; }

/* box-sizing하기 전(before)은 box-sizing:content-box;로서 기본형으로 처리
   box-sizing을 사용하면(after) box-sizing:border-box;로서 border와, padding 모두 내부에 처리   
*/

.nth_01 > li { border-bottom:1px solid #aaa; }
.nth_01 > li:nth-child(1) { background-color:#fa0; }
.nth_01 > li:nth-child(4) { background-color:#f0a; }

.nt { padding-left:1rem; border-bottom:1px solid #fa0; }
.nt:nth-child(2) { background-color:#fac; }
.nt:nth-child(5) { background-color:#acf; }